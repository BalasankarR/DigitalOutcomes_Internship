# -*- coding: utf-8 -*-
"""wordcloudAndTopKeywords.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YLrERbHsSR8nJVAeEnpjJufWTIQn0NTj
"""

from eventregistry import *
import json, os, sys
import numpy as np
import time
import csv
import re
import pandas as pd
from bs4 import BeautifulSoup
import requests
import html
from wordcloud import WordCloud
import matplotlib.pyplot as plt

API_Key = "95cce15e-ec95-488a-aaca-fd1dd1a34fec" #Use your API Key
er = EventRegistry(apiKey = API_Key, allowUseOfArchive=False)

"""#### We will look at the code for Microsoft (Wordcloud and Top 10 Keywords)."""

q = QueryArticles(conceptUri = er.getConceptUri("Microsoft"), lang = "eng", dataType = ['news','pr'])
q.setRequestedResult(RequestArticlesKeywordAggr(articlesSampleSize = 5000))
res2 = er.execQuery(q)

keywords = []
weights = []
r = re.compile(r'[a-zA-Z].*')
l = res2['keywordAggr']['results']

for i in range(len(l)):
    key = l[i]['keyword']
    wt = l[i]['weight']
    
    a = r.search(key)
    if(a != None):
        keywords.append(key) 
        weights.append(wt)

"""#### We create the word cloud here."""

def black_color_func(word, font_size, position, orientation, random_state = None, **kwargs):
    return("hsl(0,100%, 1%)")

d = {}
for i in range(len(keywords)):
    d[keywords[i]] = weights[i]
    
wordcloud = WordCloud(background_color = "white", width = 3000, height = 2000).generate_from_frequencies(d)
wordcloud.recolor(color_func = black_color_func)
plt.figure(figsize = [15,10])
plt.imshow(wordcloud, interpolation = "bilinear")
plt.axis("off")

s = ''
s = 'Microsoft' + '_Keywords_image.png'

plt.savefig(s)

"""#### Now we print the Top 10 Keywords."""

for i in range(10):
    print(keywords[i])

"""#### Now we will look at the Top 10 companies.

#### fortune2021.csv holds the data of the Fortune 1000 companies from which we store the name of the companies in comp.
"""

df = pd.read_csv("fortune2021.csv")
comp = df['company'].to_list()
rank = df['rank'].to_list()

def black_color_func(word, font_size, position, orientation, random_state = None, **kwargs):
    return("hsl(0,100%, 1%)")

class color:
    BOLD = '\033[1m'
    END = '\033[0m'
    
keywords_list = []
weights_list = []

n_comp = 10
for k in range(n_comp):         
    q = QueryArticles(conceptUri = er.getConceptUri(comp[k]), lang = "eng", dataType = ['news','pr'])
    q.setRequestedResult(RequestArticlesKeywordAggr(articlesSampleSize = 5000))
    res2 = er.execQuery(q)
    
    print("------ {} ------".format(comp[k]))
    
    keywords = []
    weights = []
    r = re.compile(r'[a-zA-Z].*')
    l = res2['keywordAggr']['results']

    for i in range(len(l)):
        key = l[i]['keyword']
        wt = l[i]['weight']
    
        a = r.search(key)
        if(a != None):
            keywords.append(key) 
            weights.append(wt)
            
    d = {}
    for i in range(len(keywords)):
        d[keywords[i]] = weights[i]
    
    wordcloud = WordCloud(background_color = "white", width = 3000, height = 2000).generate_from_frequencies(d)
    wordcloud.recolor(color_func = black_color_func)
    plt.figure(figsize = [15,10])
    plt.imshow(wordcloud, interpolation = "bilinear")
    plt.axis("off")
    
    s = ''
    s = comp[k] + '_Keywords_image.png'
    
    plt.savefig(s)
    
    print(color.BOLD + "Top 10 Keywords - {} ".format(comp[k]) + color.END)
    
    for i in range(10):
        print(keywords[i])
    keywords_list.append(keywords) 
    weights_list.append(weights)

b = []
for i in range(n_comp):
    a = keywords_list[i]
    w = weights_list[i]
    
    d = {}
    for j in range(len(a)):
        d[j] = [a[j],w[j]]
    d['Company'] = comp[i]
    d['Rank'] = rank[i]
    
    b.append(d)

out_file = open("TopKeywords_1.json", "w") 
json.dump(b, out_file, indent = 6) 
out_file.close()

